
@{
    ViewData["Title"] = "LabelsIndex";
    Layout = "~/Views/Shared/_LayuiLayout.cshtml";
}

<script type="text/html" id="toolbarTable">
    <div class="layui-btn-container">
        <button class="layui-btn layui-btn-lg" lay-event="query">查询</button>
        <button class="layui-btn layui-btn-lg" lay-event="add">添加</button>

    </div>
</script>

<script type="text/html" id="barTableBtn">
    <a class="layui-btn layui-btn-xs" lay-event="edit">编辑</a>
    <a class="layui-btn layui-btn-danger layui-btn-xs" lay-event="del">删除</a>
</script>

<script type="text/html" id="switchIsValid">
    <input type="checkbox" name="isValid" value="{{d.isValid}}" lay-skin="switch" lay-text="是|否" lay-filter="isValid" {{ d.isValid == true ? 'checked' : '' }}>
</script>




<table id="dataTable" lay-filter="dataTable"></table>

@section scripts{

    <script>
        layui.use(['table'], function () {
            var table = layui.table,
                $ = layui.$;
            let QueryTableURL = "/Blog/ArticleManage/GetArticleTable";
            let ShowDialogURL = "/Blog/LabelsManage/LabelsDialog";
            let CreateURL = "/Blog/LabelsManage/CreateLabels";
            let UpdateURL = "";

            let tableCols = [[
                { type: 'checkbox', fixed: 'left' },
                { field: 'ArticleTitle', title: '文章标题', width: 120, edit: 'text' },
                { field: 'ArticleConten', title: '文章内容', edit: 'text' },
                { field: 'IsValid', title: '城市', width: 120, templet: '#switchIsValid' },
                { fixed: 'right', title: '操作', toolbar: '#barTableBtn', width: 150 }
            ]];
            //渲染表格
            window.ins1 = table.render({
                elem: '#dataTable',
                title: '博客类型数据表',
                size: 'lg',
                autoSort: false, //是否自动排序。如果否，则由服务端排序
                loading: false,
                totalRow: true,
                limit: 30,
                toolbar: '#toolbarTable',
                cols: tableCols,
                initSort1: {
                    field: 'experience', //排序字段，对应 cols 设定的各字段名
                    type: 'desc' //排序方式  asc: 升序、desc: 降序、null: 默认排序
                },
                headers: { headers_token: 'sasasas' },
                error: function (res, msg) {
                    console.log(res, msg)
                }
            });

            //工具栏事件
            table.on('toolbar(dataTable)', function (obj) {
                var checkStatus = table.checkStatus(obj.config.id);
                switch (obj.event) {
                    case 'query':
                        //深度重载
                        table.reload('dataTable', {
                            url: QueryTableURL,
                            method: "get",
                            request: {
                                pageName: 'PageIndex', //页码的参数名称，默认：page
                                limitName: 'PageSize' //每页数据量的参数名，默认：limit
                            },
                            where: {
                                RoleId: "",
                                RoleName: "",
                                IsValid: null,
                                StartTime: null,
                                EndTime: null,
                            }
                        }, true);
                        break;
                    case 'add':
                        ShowDialogAction();
                        break;
                    case 'update':
                        layer.msg('编辑');
                        break;
                    case 'delete':
                        layer.msg('删除');
                        break;
                };
            });

            const ShowDialogAction = (formObj) => {
                let ActionUrl = CreateURL;
                let formTitle = "添加权限";
                let actionType = "POST"
                let identification = "";
                if (formObj != null && formObj != undefined) {
                    debugger;
                    ActionUrl = UpdateURL;
                    formTitle = "编辑权限"
                    actionType = "Put"
                    identification = formObj.roleId;
                }

                let index = layer.open({
                    type: 2,
                    title: formTitle,
                    area: ['atuo','65%'],
                    offset: '10%',
                    content: ShowDialogURL,
                    btn: ['确定', '取消'],
                    success: (layero, index) => {
                        var iframe = window['layui-layer-iframe' + index];
                        iframe.ShowDialog_Load(formObj);
                    },
                    yes: function (index, layero) {
                        let iframeWindow = window['layui-layer-iframe' + index]
                            , submit = layero.find('iframe').contents().find("#luo-submit");
                        //监听提交
                        iframeWindow.layui.form.on('submit(luo-submit)', function (data) {

                            let field = data.field; //获取提交的字段
                            let requestData = {
                                LabelId: identification,
                                LabelName: field.LabelName,
                                LabelDescribe: field.LabelDescribe,
                                IsValid: field.IsValid,
                            };

                            //提交 Ajax 成功后，静态更新表格中的数据
                            $.ajax({
                                type: actionType,
                                url: ActionUrl,
                                data: requestData,
                                dataType: "json",
                                success: function (result) {
                                    console.log(result);
                                    if (result.status) {
                                        table.reload('dataTable');
                                        layer.close(index); //关闭弹层
                                    }
                                    else {
                                        layer.alert(result.messages);
                                    }
                                },
                                error: function (jqXHR) {
                                    alert("发生错误：" + jqXHR.status);
                                }
                            });
                        });
                        submit.trigger('click');
                    }
                });
                layer.iframeAuto(index);
            };

        });
    </script>
}

